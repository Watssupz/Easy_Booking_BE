// <auto-generated />
using System;
using Easy_Booking_BE.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Easy_Booking_BE.Migrations
{
    [DbContext(typeof(EasyBookingBEContext))]
    partial class EasyBookingBEContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EasyBooking.Data.Booking", b =>
                {
                    b.Property<int>("booking_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("booking_id"), 1L, 1);

                    b.Property<int>("booking_status")
                        .HasColumnType("int");

                    b.Property<DateTime>("check_in")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("check_out")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("end_date_booking")
                        .HasColumnType("datetime2");

                    b.Property<int>("num_adults")
                        .HasColumnType("int");

                    b.Property<int>("num_children")
                        .HasColumnType("int");

                    b.Property<int>("payment_status")
                        .HasColumnType("int");

                    b.Property<double>("price")
                        .HasColumnType("float");

                    b.Property<DateTime>("start_date_booking")
                        .HasColumnType("datetime2");

                    b.HasKey("booking_id");

                    b.HasIndex("booking_status");

                    b.HasIndex("payment_status");

                    b.ToTable("Booking");
                });

            modelBuilder.Entity("EasyBooking.Data.Booking_Room", b =>
                {
                    b.Property<int>("booking_id")
                        .HasColumnType("int");

                    b.Property<int>("room_id")
                        .HasColumnType("int");

                    b.HasKey("booking_id", "room_id");

                    b.HasIndex("room_id");

                    b.ToTable("Booking_Room");
                });

            modelBuilder.Entity("EasyBooking.Data.Booking_Status", b =>
                {
                    b.Property<int>("booking_status_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("booking_status_id"), 1L, 1);

                    b.Property<int>("booking_status_name")
                        .HasColumnType("int");

                    b.HasKey("booking_status_id");

                    b.ToTable("Booking_Status");
                });

            modelBuilder.Entity("EasyBooking.Data.Feature", b =>
                {
                    b.Property<int>("feature_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("feature_id"), 1L, 1);

                    b.Property<int>("feature_name")
                        .HasColumnType("int");

                    b.HasKey("feature_id");

                    b.ToTable("Feature");
                });

            modelBuilder.Entity("EasyBooking.Data.Floor", b =>
                {
                    b.Property<int>("floor_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("floor_id"), 1L, 1);

                    b.Property<int>("floor_name")
                        .HasColumnType("int");

                    b.HasKey("floor_id");

                    b.ToTable("Floor");
                });

            modelBuilder.Entity("EasyBooking.Data.Location", b =>
                {
                    b.Property<int>("location_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("location_id"), 1L, 1);

                    b.Property<string>("location_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("location_id");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("EasyBooking.Data.Payment_Status", b =>
                {
                    b.Property<int>("payment_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("payment_id"), 1L, 1);

                    b.Property<string>("payment_status_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("payment_id");

                    b.ToTable("Payment_Status");
                });

            modelBuilder.Entity("EasyBooking.Data.Room", b =>
                {
                    b.Property<int>("room_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("room_id"), 1L, 1);

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("floor_id")
                        .HasColumnType("int");

                    b.Property<int>("location_id")
                        .HasColumnType("int");

                    b.Property<double>("price_per_night")
                        .HasColumnType("float");

                    b.Property<string>("room_number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("room_status_id")
                        .HasColumnType("int");

                    b.HasKey("room_id");

                    b.HasIndex("floor_id");

                    b.HasIndex("location_id");

                    b.HasIndex("room_status_id");

                    b.ToTable("Room");
                });

            modelBuilder.Entity("EasyBooking.Data.Room_Feature", b =>
                {
                    b.Property<int>("room_id")
                        .HasColumnType("int");

                    b.Property<int>("feature_id")
                        .HasColumnType("int");

                    b.HasKey("room_id", "feature_id");

                    b.HasIndex("feature_id");

                    b.ToTable("Room_Feature");
                });

            modelBuilder.Entity("EasyBooking.Data.Room_Status", b =>
                {
                    b.Property<int>("room_status_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("room_status_id"), 1L, 1);

                    b.Property<int>("room_status_name")
                        .HasColumnType("int");

                    b.HasKey("room_status_id");

                    b.ToTable("Room_Status");
                });

            modelBuilder.Entity("EasyBooking.Data.Booking", b =>
                {
                    b.HasOne("EasyBooking.Data.Booking_Status", "Booking_Status")
                        .WithMany()
                        .HasForeignKey("booking_status")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EasyBooking.Data.Payment_Status", "Payment_Status")
                        .WithMany()
                        .HasForeignKey("payment_status")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking_Status");

                    b.Navigation("Payment_Status");
                });

            modelBuilder.Entity("EasyBooking.Data.Booking_Room", b =>
                {
                    b.HasOne("EasyBooking.Data.Booking", "Booking")
                        .WithMany()
                        .HasForeignKey("booking_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EasyBooking.Data.Room", "Room")
                        .WithMany()
                        .HasForeignKey("room_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("EasyBooking.Data.Room", b =>
                {
                    b.HasOne("EasyBooking.Data.Floor", "Floor")
                        .WithMany()
                        .HasForeignKey("floor_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EasyBooking.Data.Location", "Location")
                        .WithMany()
                        .HasForeignKey("location_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EasyBooking.Data.Room_Status", "Room_Status")
                        .WithMany()
                        .HasForeignKey("room_status_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Floor");

                    b.Navigation("Location");

                    b.Navigation("Room_Status");
                });

            modelBuilder.Entity("EasyBooking.Data.Room_Feature", b =>
                {
                    b.HasOne("EasyBooking.Data.Feature", "Feature")
                        .WithMany()
                        .HasForeignKey("feature_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EasyBooking.Data.Room", "Room")
                        .WithMany()
                        .HasForeignKey("room_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Feature");

                    b.Navigation("Room");
                });
#pragma warning restore 612, 618
        }
    }
}
